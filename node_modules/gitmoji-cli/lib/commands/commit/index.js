import inquirer from 'inquirer';
import configurationVault from "../../utils/configurationVault/index.js";
import getEmojis from "../../utils/getEmojis.js";
import COMMIT_MODES from "../../constants/commit.js";
import withHook, { registerHookInterruptionHandler, cancelIfNeeded, skipIfGitmojiIsPresent } from "./withHook/index.js";
import withClient from "./withClient/index.js";
import prompts from "./prompts.js";
export const capitalizeTitle = title => title.charAt(0).toUpperCase() + title.slice(1);
const promptAndCommit = options => getEmojis().then(gitmojis => prompts(gitmojis, options)).then(questions => {
  inquirer.prompt(questions).then(answers => {
    const transformedAnswers = {
      ...answers,
      title: configurationVault.getCapitalizeTitle() ? capitalizeTitle(answers.title) : answers.title
    };
    if (options.mode === COMMIT_MODES.HOOK) {
      return withHook(transformedAnswers);
    }
    return withClient(transformedAnswers);
  });
});
const commit = options => {
  if (options.mode === COMMIT_MODES.HOOK) {
    skipIfGitmojiIsPresent(options);
    registerHookInterruptionHandler();
    return cancelIfNeeded().then(() => promptAndCommit(options));
  }
  return promptAndCommit(options);
};
export default commit;